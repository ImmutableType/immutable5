{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD962543A1B22dB4F878cDc3f0508F63F5A1f73E8",
      "txHash": "0x38bc6c3c80ea65a8c33b6ff093cfa9460d95a685bcef089c775b8d0f0631b9fb",
      "kind": "uups"
    },
    {
      "address": "0x3C3687FA298E98b92aB3176e018DcfF70576D4A9",
      "txHash": "0x91819b8a9763419a5bfb044b507faf69ac6eafd35d33a49d76b2593343e9b121",
      "kind": "uups"
    },
    {
      "address": "0x26d04b4a2Af10a569dd49C1A01A4307F1C174DA6",
      "txHash": "0xdff02b7115f0272e2b0b6abe29254a91e0f96f384d306e551c9df7df7039a87e",
      "kind": "uups"
    }
  ],
  "impls": {
    "a65fa092a8e6f6677c489a579ac65e4937035b9ccda6383bae62716d648b8e23": {
      "address": "0xa97180aDDdE1c7bd364f013482B8416cDEFd4d26",
      "txHash": "0x7c73793bdb143a26c30eb56cf81815525be041e1f6dc1bfbbafe3dcd5feb803f",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "frothToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3177",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:51"
          },
          {
            "label": "buffaflowToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3177",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:53"
          },
          {
            "label": "profileNFTContract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IProfileNFT)11309",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:54"
          },
          {
            "label": "entryFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:57"
          },
          {
            "label": "voteCost",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:58"
          },
          {
            "label": "maxVotesPerWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:59"
          },
          {
            "label": "dailySeedAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:60"
          },
          {
            "label": "genesisTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:63"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:64"
          },
          {
            "label": "dailyTemplates",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(DailyTemplate)11392_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:106"
          },
          {
            "label": "submissions",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(Submission)11416_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:107"
          },
          {
            "label": "daySubmissionIds",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:108"
          },
          {
            "label": "userVotesOnSubmission",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:109"
          },
          {
            "label": "voterContributions",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterContribution)11421_storage))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:110"
          },
          {
            "label": "creatorRewards",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)240_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)559_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)623_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_array(t_uint256)4_storage)dyn_storage": {
            "label": "uint256[4][]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3177": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IProfileNFT)11309": {
            "label": "contract IProfileNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(VoterContribution)11421_storage)": {
            "label": "mapping(address => struct FrothComicDaily.VoterContribution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterContribution)11421_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FrothComicDaily.VoterContribution))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DailyTemplate)11392_storage)": {
            "label": "mapping(uint256 => struct FrothComicDaily.DailyTemplate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Submission)11416_storage)": {
            "label": "mapping(uint256 => struct FrothComicDaily.Submission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(DailyTemplate)11392_storage": {
            "label": "struct FrothComicDaily.DailyTemplate",
            "members": [
              {
                "label": "dayId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "characterIds",
                "type": "t_array(t_uint8)4_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "backgroundId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "openTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "closeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalEntries",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "creatorPool",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "voterPool",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "treasuryCollected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "winners",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "winningTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "finalized",
                "type": "t_bool",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(Submission)11416_storage": {
            "label": "struct FrothComicDaily.Submission",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dayId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "characterIds",
                "type": "t_array(t_uint8)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "backgroundId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wordIndices",
                "type": "t_array(t_array(t_uint256)4_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "votes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(VoterContribution)11421_storage": {
            "label": "struct FrothComicDaily.VoterContribution",
            "members": [
              {
                "label": "totalVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ef515c3d2608aa143200f4164d8dce73a4d9b1effebc9bf77c9cc7de6e1715aa": {
      "address": "0xd99aB3390aAF8BC69940626cdbbBf22F436c6753",
      "txHash": "0x07d1a8066ef258a6ec56fad89e2a8a05adc86d42d07f67113277f0cf201e2f25",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "frothToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2649",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:51"
          },
          {
            "label": "buffaflowToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2649",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:52"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:53"
          },
          {
            "label": "profileNFTContract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IProfileNFT)8308",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:54"
          },
          {
            "label": "entryFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:57"
          },
          {
            "label": "voteCost",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:58"
          },
          {
            "label": "maxVotesPerWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:59"
          },
          {
            "label": "dailySeedAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:60"
          },
          {
            "label": "genesisTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:63"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:64"
          },
          {
            "label": "dailyTemplates",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(DailyTemplate)8391_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:106"
          },
          {
            "label": "submissions",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(Submission)8415_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:107"
          },
          {
            "label": "daySubmissionIds",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:108"
          },
          {
            "label": "userVotesOnSubmission",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:109"
          },
          {
            "label": "voterContributions",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterContribution)8420_storage))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:110"
          },
          {
            "label": "creatorRewards",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "FrothComicDaily",
            "src": "contracts/FrothComicDaily.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)240_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)559_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)623_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_array(t_uint256)4_storage)dyn_storage": {
            "label": "uint256[4][]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2649": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IProfileNFT)8308": {
            "label": "contract IProfileNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(VoterContribution)8420_storage)": {
            "label": "mapping(address => struct FrothComicDaily.VoterContribution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterContribution)8420_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FrothComicDaily.VoterContribution))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DailyTemplate)8391_storage)": {
            "label": "mapping(uint256 => struct FrothComicDaily.DailyTemplate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Submission)8415_storage)": {
            "label": "mapping(uint256 => struct FrothComicDaily.Submission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(DailyTemplate)8391_storage": {
            "label": "struct FrothComicDaily.DailyTemplate",
            "members": [
              {
                "label": "dayId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "characterIds",
                "type": "t_array(t_uint8)4_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "backgroundId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "openTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "closeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalEntries",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "creatorPool",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "voterPool",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "treasuryCollected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "winners",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "winningTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "finalized",
                "type": "t_bool",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(Submission)8415_storage": {
            "label": "struct FrothComicDaily.Submission",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dayId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "characterIds",
                "type": "t_array(t_uint8)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "backgroundId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wordIndices",
                "type": "t_array(t_array(t_uint256)4_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "votes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(VoterContribution)8420_storage": {
            "label": "struct FrothComicDaily.VoterContribution",
            "members": [
              {
                "label": "totalVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
